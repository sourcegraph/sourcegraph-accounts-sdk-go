name: Go
on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'
  pull_request:
  # Disable path matching so required jobs are always run on pull requests
  # paths:
  #   - '**.go'
  #   - 'go.mod'
  #   - '.golangci.yml'
  #   - '.github/workflows/go.yml'
env:
  GOPROXY: "https://proxy.golang.org"
  GOPRIVATE: "github.com/sourcegraph/*"
  PRIVATE_TOKEN: "${{ secrets.PRIVATE_SG_ACCESS_TOKEN }}"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.x
      - name: Enable pulling Go modules from private sourcegrahp/sourcegraph 
        run: git config --global url."https://${PRIVATE_TOKEN}@github.com/sourcegraph/".insteadOf "https://github.com/sourcegraph/"
      - name: Check Go module tidiness
        shell: bash
        run: |
          go mod tidy
          STATUS=$(git status --porcelain)
          if [ ! -z "$STATUS" ]; then
            echo "Unstaged files:"
            echo $STATUS
            echo "Run 'go mod tidy' and commit them"
            exit 1
          fi
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=30m

  test:
    name: Test
    strategy:
      matrix:
        go-version: [ 1.22.x ]
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
